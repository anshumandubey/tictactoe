{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","values","setValues","mark","setMark","winner","setWinner","changeValue","index","checkWinner","className","map","value","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAkDeA,MA/Cf,WAAgB,IAAD,EACeC,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KADzD,mBACNC,EADM,KACEC,EADF,OAEWF,mBAAS,KAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGeJ,mBAAS,IAHxB,mBAGNK,EAHM,KAGEC,EAHF,KAKb,SAASC,EAAYC,GACnBP,EAAOO,GAASL,EAChBD,EAAUD,IAQZ,WACE,GAAKA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IAAeA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IAAeA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IACvNA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IAAeA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IAAeA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IACrNA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,IAAeA,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,IAAoB,KAAdA,EAAO,GAC1I,OAAO,EAET,OAAO,EAbHQ,GAGFL,EAAiB,MAATD,EAAe,IAAM,KAF7BG,EAAUH,GAqBd,OACE,sBAAKO,UAAoB,MAATP,EAAe,kBAA6B,MAATA,EAAe,kBAAoB,YAAtF,UACE,qBAAKO,UAAU,QAAf,SAEIT,EAAOU,KAAI,SAACC,EAAOJ,GACjB,OAAO,wBAAQE,UAAqB,MAAVE,EAAgB,aAAyB,MAAVA,EAAgB,aAAe,OAAoBC,SAAoB,KAAVD,EAAcE,QAAS,WAAQP,EAAYC,IAA1J,SAAqKI,GAAvEJ,QAI3G,sBAAKE,UAAsB,KAAXL,EAAgB,cAAgB,SAAhD,UACE,4CAAeF,KACf,wBAAQO,UAAU,UAAUI,QAjBlC,WACEZ,EAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC3CE,EAAQ,KACRE,EAAU,KAcN,4BChCOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9bd76305.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [values, setValues] = useState(['', '', '', '', '', '', '', '', '']);\n  const [mark, setMark] = useState('O');\n  const [winner, setWinner] = useState('');\n\n  function changeValue(index) {\n    values[index] = mark;\n    setValues(values);\n    if (checkWinner()) {\n      setWinner(mark);\n    } else {\n      setMark(mark === 'O' ? 'X' : 'O');\n    }\n  }\n\n  function checkWinner() {\n    if ((values[0] === values[1] && values[0] === values[2] && values[0] !== '') || (values[0] === values[3] && values[0] === values[6] && values[0] !== '') || (values[6] === values[7] && values[6] === values[8] && values[6] !== '') ||\n      (values[2] === values[5] && values[2] === values[8] && values[2] !== '') || (values[0] === values[4] && values[0] === values[8] && values[0] !== '') || (values[6] === values[4] && values[6] === values[2] && values[6] !== '') ||\n      (values[4] === values[1] && values[4] === values[7] && values[4] !== '') || (values[3] === values[4] && values[3] === values[5] && values[3] !== '')) {\n      return true;\n    }\n    return false;\n  }\n\n  function reset() {\n    setValues(['', '', '', '', '', '', '', '', '']);\n    setMark('O');\n    setWinner('');\n  }\n\n  return (\n    <div className={mark === 'O' ? 'round container' : mark === 'X' ? 'cross container' : 'container'}>\n      <div className=\"board\">\n        {\n          values.map((value, index) => {\n            return <button className={value === 'O' ? 'round tile' : value === 'X' ? 'cross tile' : 'tile'} key={index} disabled={value !== ''} onClick={() => { changeValue(index) }}>{value}</button>\n          })\n        }\n      </div>\n      <div className={winner !== '' ? 'winnerBoard' : 'hidden'}>\n        <h3>Winner is {mark}</h3>\n        <button className=\"restart\" onClick={reset}>Restart</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}